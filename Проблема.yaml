Governance:
  changeHistory: []
  lastReviewDate: ''
  status: draft
  steward: ''
  version: 1.0.0
Identification:
  altLabels: Проблема / Issue / Противоречие
  conceptId: https://example.org/concept/problema
  conceptLabel: Проблема
  conceptLevel: Meta
  conceptType: Class
  creationDate: '2023-10-01T00:00:00Z'
  creator: ''
  discipline:
    level: L2
    nameRu: Системное мышление
  domain: Системная инженерия
  extensibility: {}
  metaMetaType: ''
  theoRef: []
Pedagogy:
  bloomLevel: Understand
  difficulty: '2'
  dokLevel: '2'
  finkProfile:
  - Foundational Knowledge
  - Application
  - Integration
  learningObjectives:
  - Сформулировать проблему как противоречие в заданной ситуации
  - Выявить связи проблемы с паттернами и циклами развития
  - Применить понятие проблемы для постановки задач в проектах
  marzanoLevel: Comprehension
  masteryCriteria: Обучающийся может самостоятельно идентифицировать проблему в реальной
    ситуации, сформулировать ее как противоречие и предложить подход к решению.
  personalizationHint: для системных мыслителей
  prerequisiteConcepts: []
  promptHintRu: Опиши, как проблема как противоречие применяется в паттернах для решения
    задач в системной инженерии.
  recommendedResources: []
  soloLevel: Relational
Semantics:
  constraints:
  - Проблема должна быть сформулирована как противоречие для применения паттерна
  - Решение проблемы повторяется в цикле, так как новая проблема обязательно появится
  definition_ru: Класс, представляющий противоречие или ситуацию, которую призван
    решить паттерн, например, 'если выключится произвольный один блок, система должна
    продолжать работать'; проблема проявляется как обнаружение невозможности рассуждений
    по правилам текущих лучших версий прикладных дисциплин, или как нежелательное
    явление в процессах, требующее выявления корневого конфликта.
  examplesRu:
    negative: Игнорирование проблемы в планировании как 'водопада', где документы
      не отражают реальную жизнь, приводя к несоответствию планов и работ.
    positive: В паттерне проблема формулируется как 'если выключится произвольный
      один блок, система должна продолжать работать', что приводит к выбору решения
      с учетом влияний.
  formalDefinition: ''
  informalDefinition: Проблема - это ситуация или противоречие, требующее решения,
    часто формулируемое как невозможность достижения желаемого состояния в текущих
    условиях. Она возникает в различных контекстах, таких как постановка задач, паттерны
    или циклы развития интеллекта.
  keyProperties:
  - datatype: string
    name: Формулировка как противоречие
    unit: ''
  - datatype: string
    name: Связь с паттерном или циклом развития
    unit: ''
  - datatype: string
    name: Возникновение в ситуациях жизни или проектов
    unit: ''
  metaphorRu: Проблема как грозовая туча в ToC, где выявляется корневой конфликт для
    разрешения нежелательных явлений.
  notThisRu: Проблему не следует путать с простой задачей или issue без противоречия;
    например, не путать с утопией вроде 'водопада' в планировании, которая не отражает
    реальную жизнь, или с ситуацией 'а чо такова?', где игнорируется несоответствие.
  oppositeRu: https://example.org/concept/reshenie
  purposeRu: Проблема служит для выявления и формализации противоречий в ситуациях,
    стимулируя постановку задач, развитие интеллекта и прикладного мастерства; она
    запускает цикл развития, где решение одной проблемы приводит к появлению новой,
    способствуя прогрессу и адаптации.
  relatedConcepts:
  - relation: RELATES_TO
    targetIri: https://example.org/concept/zadacha
  - relation: PART_OF
    targetIri: https://example.org/concept/pattern
  - relation: IS_A
    targetIri: https://example.org/concept/protivorechie
  - relation: HAS_EXAMPLE
    targetIri: https://example.org/concept/issue
  transformationPatterns:
  - Проблема → Задача → Решение
  - Issue → Task → Mission
  usageContextRu:
  - Постановка задачи как паттернирование ситуации из жизни в абстрактных типах
  - Описание паттерна, где проблема формулируется как противоречие
  - Цикл развития интеллекта и мастерства, где проблема требует познания и решения
  - Жизненный цикл проектов, где проблема проявляется как несоответствие планов реальности
  - Issues в управлении, появляющиеся up front или после понимания необходимости работы
  - Усиление интеллекта для решения проблем в коллективе или индивидуально
  - Работа с LLM для поиска решений проблем в курсах или задачах
  - Функциональные и архитектурные характеристики систем, где проблема возникает при
    испытаниях
  - Выявление корневого конфликта в ТРИЗ и ToC для нежелательных явлений
